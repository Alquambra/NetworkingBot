# -*- coding: utf-8 -*-
# Python 3.8.6


from threading import Thread
from sqlalchemy import create_engine
import logging
import logging.config


TOKEN = ''
engine = create_engine('')

log_config = {
    'version': 1,
    'formatters': {
        'main_formatter': {
            'format': '%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        },
    },
    'handlers': {
        'debug_handler': {
            'class': 'logging.FileHandler',
            'formatter': 'main_formatter',
            'filename': 'bot_debug.log',
            'encoding': 'UTF-8',
        },
        'error_handler': {
            'class': 'logging.FileHandler',
            'formatter': 'main_formatter',
            'filename': 'bot_error.log',
            'encoding': 'UTF-8',
        },
    },
    'loggers': {
        'debug_logger': {
            'handlers': ['debug_handler'],
            'level': 'DEBUG',
        },
        'error_logger': {
            'handlers': ['error_handler'],
            'level': 'ERROR',
        },
    },
}


logging.config.dictConfig(log_config)
debug_logger = logging.getLogger('debug_logger')
error_logger = logging.getLogger('debug_logger')


def debug_with_thread(message):
    thread = Thread(target=debug_logger.debug, args=(message, ))
    thread.start()


def error_with_thread(message):
    thread = Thread(target=error_logger.exception, args=(message, ))
    thread.start()

